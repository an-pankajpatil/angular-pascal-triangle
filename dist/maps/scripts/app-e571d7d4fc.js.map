{"version":3,"sources":["scripts/app.js"],"names":["angular","module","BinomialCoeffService","this","fact","num","result","calcBinomialCoeff","row","j","Math","round","calcRows","push","getPascalTriangleRows","rows","pascalTriangle","i","service","MainController","vm","value","error","output","colors","setColor","index","color","showPascalTriangle","$inject","controller","routerConfig","$stateProvider","$urlRouterProvider","state","url","templateUrl","controllerAs","otherwise","config","run","$templateCache","put"],"mappings":"CAAA,WACE,YAEAA,SACGC,OAAO,yBAA0B,aAAc,YAAa,eAAgB,cAQjF,WACI,YAKA,SAASC,KACLC,KAAKC,KAAO,SAASC,GACjB,GAAIC,GAAS,EACb,OAAW,IAAPD,EACOA,EAEPC,EAASD,EAAMF,KAAKC,KAAKC,EAAM,IAMvCF,KAAKI,kBAAoB,SAASC,EAAKC,GACnC,MAAOC,MAAKC,MAAMR,KAAKC,KAAKI,IAAQL,KAAKC,KAAKK,GAAKN,KAAKC,KAAKI,EAAMC,MAIvEN,KAAKS,SAAW,SAASJ,GACrB,GAAIF,KAGJ,IAAW,GAAPE,EACA,OAAQ,EAGZ,IAAW,GAAPA,EACA,OAAQ,EAAG,EAGfF,GAAOO,KAAK,EAEZ,KAAK,GAAIJ,GAAI,EAAOD,EAAJC,EAASA,IAGrBH,EAAOO,KAAKV,KAAKI,kBAAkBC,EAAKC,GAK5C,OADAH,GAAOO,KAAK,GACLP,GAIXH,KAAKW,sBAAwB,SAASC,GAElC,IAAK,GADDC,MACKC,EAAI,EAAOF,EAAJE,EAAUA,IAEtBD,EAAeH,KAAKV,KAAKS,SAASK,GAEtC,OAAOD,IArDfhB,QACKC,OAAO,yBACPiB,QAAQ,uBAAwBhB,MA4DzC,WACI,YAOA,SAASiB,GAAejB,GAGpB,GAAIkB,GAAKjB,IAGTiB,GAAGL,MACCM,MAAO,GAIXD,EAAGE,OAAQ,EAGXF,EAAGG,UAGHH,EAAGI,QACC,MACA,OACA,SACA,SAIJJ,EAAGK,SAAW,SAASC,GACnB,OACIC,MAAOP,EAAGI,OAAOE,EAAQ,KAKjCN,EAAGQ,mBAAqB,WAGpB,MAAIR,GAAGL,KAAKM,MAAQ,OAChBD,EAAGE,OAAQ,IAGfF,EAAGE,OAAQ,OAEXF,EAAGG,OAASrB,EAAqBY,sBAAsBM,EAAGL,KAAKM,UA9CvEF,EAAeU,SAAW,wBAA1B7B,QACKC,OAAO,yBACP6B,WAAW,iBAAkBX,MAiDtC,WACE,YAOA,SAASY,GAAaC,EAAgBC,GACpCD,EACGE,MAAM,QACLC,IAAK,IACLC,YAAa,qBACbN,WAAY,iBACZO,aAAc,SAGlBJ,EAAmBK,UAAU,KAb/BP,EAAaF,SAAW,iBAAkB,sBAD1C7B,QACGC,OAAO,yBACPsC,OAAOR,MAiBZ/B,QAAQC,OAAO,yBAAyBuC,KAAK,iBAAkB,SAASC,GAAiBA,EAAeC,IAAI,qBAAqB","file":"scripts/app-e571d7d4fc.js","sourcesContent":["(function() {\n  'use strict';\n\n  angular\n    .module('angularPascalTriangle', ['ngSanitize', 'ui.router', 'ui.bootstrap', 'toastr']);\n\n})();\n\n/*\n *  @name : BinomialCoeffService\n *  @description: Create Pascal Triangle Array for specified number of rows\n */\n(function() {\n    'use strict';\n    angular\n        .module('angularPascalTriangle')\n        .service('BinomialCoeffService', BinomialCoeffService);\n\n    function BinomialCoeffService() {\n        this.fact = function(num) {\n            var result = '';\n            if (num <= 1) {\n                return num;\n            } else {\n                result = num * this.fact(num - 1);\n            }\n            return result;\n\n        };\n\n        this.calcBinomialCoeff = function(row, j) {\n            return Math.round(this.fact(row) / (this.fact(j) * this.fact(row - j)));\n        };\n\n        //Get Single Rows Array\n        this.calcRows = function(row) {\n            var result = [];\n\n            //if row is less than equal to 0, then return only 1\n            if (row <= 0)\n                return [1];\n\n            //if row is equal to 1, then return 1 1\n            if (row == 1)\n                return [1, 1];\n\n            // push 1 to result array to start the row with 1\n            result.push(1);\n\n            for (var j = 1; j < row; j++) {\n                //Add two number above the row\n                //var data = Math.round(this.fact(row) / (this.fact(j) * this.fact(row - j)));\n                result.push(this.calcBinomialCoeff(row, j));\n            }\n\n            //push 1 to result array to end the row with 1\n            result.push(1);\n            return result;\n        };\n\n        //Get All the Triangle Rows\n        this.getPascalTriangleRows = function(rows) {\n            var pascalTriangle = [];\n            for (var i = 0; i < rows; i++) {\n                //Get Single Row and Push it to our final triangle\n                pascalTriangle.push(this.calcRows(i))\n            }\n            return pascalTriangle;\n        };\n    }\n})();\n\n/*\n *  @name : MainController\n *  @description: Main Controller for Application. Display Pascal Triangle\n */\n(function() {\n    'use strict';\n\n    angular\n        .module('angularPascalTriangle')\n        .controller('MainController', MainController);\n\n    /** @ngInject */\n    function MainController(BinomialCoeffService) {\n\n        //Assign this to vm, using controller-as syntax\n        var vm = this;\n\n        //Get Input Field\n        vm.rows = {\n            value: 0\n        };\n\n        //Default error variable to false;\n        vm.error = false;\n\n        //Pascal Triangle Array\n        vm.output = [];\n\n        //CSS Colors Array for Rows\n        vm.colors = [\n            'red',\n            'blue',\n            'orange',\n            'green'\n        ];\n\n        //Set Row Colors\n        vm.setColor = function(index) {\n            return {\n                color: vm.colors[index % 4]\n            };\n        };\n\n        //Print Pascal Triangle when use press go\n        vm.showPascalTriangle = function() {\n\n            //if number is less than 1 show error\n            if (vm.rows.value < 1) {\n                vm.error = true;\n                return;\n            }\n            vm.error = false;\n            //Get the Triangle Array from Service\n            vm.output = BinomialCoeffService.getPascalTriangleRows(vm.rows.value);\n        };\n    }\n})();\n\n(function() {\n  'use strict';\n\n  angular\n    .module('angularPascalTriangle')\n    .config(routerConfig);\n\n  /** @ngInject */\n  function routerConfig($stateProvider, $urlRouterProvider) {\n    $stateProvider\n      .state('home', {\n        url: '/',\n        templateUrl: 'app/main/main.html',\n        controller: 'MainController',\n        controllerAs: 'main'\n      });\n\n    $urlRouterProvider.otherwise('/');\n  }\n\n})();\n\nangular.module(\"angularPascalTriangle\").run([\"$templateCache\", function($templateCache) {$templateCache.put(\"app/main/main.html\",\"<div class=container><h3>Pascal Triangle</h3><div class=jumbotron><div class=row><label for=row>Enter No of Rows :</label><input name=row type=number class=form-control placeholder=\\\"Total Rows...\\\" ng-model=main.rows.value required><div class=\\\"alert alert-danger\\\" ng-show=main.error><p class=error>Please input number greater than 0!</p></div></div><div class=row><button class=\\\"btn btn-primary\\\" type=button ng-click=main.showPascalTriangle()>Show Triangle</button></div><div class=pascaltriangle><p ng-repeat=\\\"row in main.output track by $index\\\" ng-style=main.setColor($index)>{{row.join(\\\" \\\")}}</p></div></div></div>\");}]);"],"sourceRoot":"/source/"}